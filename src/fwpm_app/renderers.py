from __future__ import annotations

import html
from datetime import datetime, timezone
from typing import Iterable, Tuple


def build_confluence_storage(
    jira_base_url: str, issue_blocks: Iterable[Tuple[str, str, str]]
) -> str:
    """
    Build Confluence storage-format HTML with sections per issue.

    Args:
        jira_base_url: Base URL for linking to issues.
        issue_blocks: Iterable of tuples `(issue_key, issue_summary, generated_text)`.
    """
    timestamp = datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M UTC")
    header = (
        f"<p>Automated summary generated at {html.escape(timestamp)}."
        " Review for accuracy before sharing broadly.</p>"
    )

    sections = []
    for issue_key, summary, llm_text in issue_blocks:
        url = f"{jira_base_url.rstrip('/')}/browse/{issue_key}"
        safe_key = html.escape(issue_key)
        safe_summary = html.escape(summary or "")
        safe_body = _wrap_preformatted(llm_text)

        section = (
            f"<h2><a href=\"{html.escape(url)}\">{safe_key}</a> â€“ {safe_summary}</h2>"
            f"<p><strong>Summary generated by LLM:</strong></p>{safe_body}"
        )
        sections.append(section)

    return header + "".join(sections)


def _wrap_preformatted(text: str) -> str:
    escaped = html.escape(text).replace("\n", "<br/>")
    return f"<p>{escaped}</p>"
